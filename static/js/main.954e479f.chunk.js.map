{"version":3,"sources":["component/comB/comB.js","component/comC/comC.js","component/comD/comD.js","component/comE/comE.js","component/comF/comF.js","component/comA/comA.js","serviceWorker.js","index.js"],"names":["ComB","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","counter","sumClick","doubleClick","title","props","react","onClick","increment","bind","onDoubleClick","twoClick","decrement","setState","prevState","React","myszNa","console","log","myszEnter","myszOpuszcza","punktNa","ruchRolka","ComC","_this$props$title","klik","onMouseOver","onMouseEnter","onMouseLeave","onPointerEnter","onWheel","ComD","name","surName","value","onChange","setName","setSurName","e","target","ComE","hour","Date","getHours","minutes","getMinutes","seconds","getSeconds","time","timerId","window","setInterval","updateDate","clearInterval","dateStr","toLocaleTimeString","allUsers","ComF","filteredList","text","currentTarget","getFilteredUsersForText","filter","user","toLowerCase","includes","filterUser","comF_UsersList","users","UsersList","_ref","length","map","key","App","comB_ComB","comC_ComC","comD_ComD","comE_ComE","comF_ComF","Boolean","location","hostname","match","ReactDOM","render","react_default","a","createElement","comA_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.954e479f.chunk.js","sourcesContent":["import * as React from 'react'\n//import { Component } from 'react';\n\nimport './comB.css';\n//import ComC from '../comC/comC'\n\nexport default class ComB extends React.Component {\n  constructor(){\n    super();\n    this.state = { counter: 0, sumClick: 0, doubleClick: 0 };\n  }\n\n  render(){\n    const { title } = this.props;\n  \n    return(\n      <div>\n        <p>comB { title } </p>\n          <div>\n            <button onClick={ this.increment.bind(this) } onDoubleClick={ this.twoClick.bind(this) } > + </button>       \n            <button onClick={ this.decrement.bind(this) } onDoubleClick={ this.twoClick.bind(this) }> - </button>\n          </div>\n          <div>\n          <div>\n            <output> Licznik { this.state.counter }</output>\n          </div>\n          <div>\n            <output> Kliknięcia wszystkie: { this.state.sumClick }</output>\n          </div>\n          <div>\n            <output> Kliknięcia podwójne: { this.state.doubleClick } </output>\n          </div>\n          </div>  \n      </div>\n    )\n  }\n\n  increment(){\n    this.setState(prevState => { \n        return{\n          counter: prevState.counter + 1,\n          sumClick: prevState.sumClick + 1\n        }\n     });\n  }\n\n  decrement(){\n    this.setState(prevState => {\n        return{\n          counter: prevState.counter - 1,\n          sumClick: prevState.sumClick + 1\n        } \n    });\n  }\n\n  twoClick(){\n    this.setState(prevState => {\n      return {\n        doubleClick: prevState.doubleClick + 1\n      }\n    });\n  } \n}\n\n\n\n\n\n","import * as React from 'react'\n//import { Component } from 'react';\n\nimport './comC.css';\n\n//const klik = () => console.log('klik its work!');\nconst myszNa = () => console.log('onMouseOver');\nconst myszEnter = () => console.log('onMouseEnter');\nconst myszOpuszcza = () => console.log('onMouseLeave!');\nconst punktNa = () => console.log('onPointerEnter!');\nconst ruchRolka = () => console.log('onWheel!');\n\nexport default class ComC extends React.Component{\n  render(){\n    const { title='event - interakcja z komponentami' } = this.props;\n    return(\n      <div>\n        <p>ComC { title } </p>\n        <button onClick={ this.klik }> klik </button>\n        <button onMouseOver={ myszNa }> onMouseOver </button>\n        <button onMouseEnter={ myszEnter }> onMouseEnter </button>\n        <button onMouseLeave={ myszOpuszcza }> onMouseLeave </button>\n        <button onPointerEnter={ punktNa } onClick={ this.klik }> onPointerEnter </button>\n        <button onWheel={ ruchRolka }> onWheel </button>\n      </div>\n    )\n  }\n\n  klik(){\n    console.log(\"klik\");\n  }\n\n}\n\n\n\n\n// const ComC = ({title = 'nie przekazano atrybutu'}) => {\n//     return(\n//       <div>\n//         <p>comC {title}</p>\n//       </div>\n//     )\n//   };\n\n\n    \n//     export default ComC;\n\n\n    \n\n","import * as React from 'react'\n//import { Component } from 'react';\n\nimport './comD.css';\n\nexport default class ComD extends React.Component{\n  constructor(){\n    super();\n    this.state = { name: 'imie', surName: 'nazwisko' };\n  }\n\n  render(){\n    const { title='state na przykładzie formularza' } = this.props\n    return(\n      <div>\n        <p>ComD { title }</p>\n        <input value={ this.state.name } onChange = { this.setName.bind(this) }/>\n        <output> { this.state.name } </output>\n        <input value={ this.state.surName } onChange = { this.setSurName.bind(this) } />\n        <output> { this.state.surName } </output>\n      </div>\n    )\n  }\n\n  setName(e){\n    this.setState({\n        name: e.target.value\n    })\n  }\n\n  setSurName(e){\n    this.setState({\n      surName: e.target.value\n    })\n  }\n}","import * as React from 'react'\n//import { Component } from 'react';\n//import Moment  from 'react-moment';\n\nimport './comE.css';\n\nexport default class ComE extends React.Component{\n      constructor(props){\n        super(props);\n        this.state = { \n            hour: new Date().getHours(),\n            minutes: new Date().getMinutes(),\n            seconds: new Date().getSeconds(),\n            time: new Date()\n        }\n    }\n\n        componentDidMount(){\n            this.timerId = window.setInterval(this.updateDate.bind(this), 1000)\n        }\n\n        componentWillUnmount(){\n            window.clearInterval(this.timerId)\n        }\n\n        updateDate(){\n            this.setState({\n                hour: new Date().getHours(),\n                minutes: new Date().getMinutes(),\n                seconds: new Date().getSeconds(),\n                time: new Date()\n            })\n        }\n\n        // addZero(){\n        //     if(this.seconds.length === 1){\n        //         this.seconds = '0' + this.seconds;\n        //     } else {\n        //         this.seconds = this.seconds;\n        //     }\n        // }\n\n        \n        render(){\n            \n            const { title='zegar' } = this.props\n            const dateStr = {\n                hour: this.state.hour,\n                minutes: this.state.minutes,\n                seconds: this.state.seconds\n            }\n\n            // if(this.state.seconds.length === 1){\n            //     this.state.seconds =  setState(prevState => {\n            //         return{\n            //             seconds: prevState.seconds =+ '0' + seconds,\n            //         }\n            //     }\n            \n            \n            return(\n                <div>\n                    <p>ComE { title } </p>\n                    <div>\n                        <time> { dateStr.hour } : { dateStr.minutes } : {dateStr.seconds}</time>\n                    </div>\n                    <div>\n                        <time>{ this.state.time.toLocaleTimeString() }</time>\n                    </div>\n                    \n                </div>\n            )\n        }\n}\n\n\n\n","import * as React from 'react'\n\n\nconst allUsers = [ 'Julia', 'Michał', 'Natasza', 'Paulina', 'Bartłomiej', 'Staś', 'Albert' ];\n\nexport default class ComF extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      filteredList: allUsers\n    };\n  }\n\n  filterUser(e) {\n    const text = e.currentTarget.value;\n    const filteredList = this.getFilteredUsersForText(text)\n    this.setState({\n      filteredList\n    })\n  }\n\n  getFilteredUsersForText(text){\n    return allUsers.filter(user => user.toLowerCase().includes(text.toLowerCase()))\n  }\n  \n  render() {\n    const {title = 'static contact list'} = this.props;\n    return(\n      <div>\n        <p>ComF {title}</p>\n        <input onChange={this.filterUser.bind(this)} />\n        <UsersList users={this.state.filteredList}> </UsersList>\n      </div>\n    ) \n  }\n}\n\nconst UsersList = ({ users }) => {\n  if (users.length > 0) {\n    return (\n      <ul>\n        {users.map(user => <li key={user}>{user}</li>)}\n      </ul>\n    );\n  }\n\n  return (\n    <p>No results!</p>\n  );\n};","import * as React from 'react'\n\n\nimport './comA.css';\nimport ComB from '../comB/comB'\nimport ComC from '../comC/comC'\nimport ComD from '../comD/comD'\nimport ComE from '../comE/comE'\nimport ComF from './../comF/comF';\n\n\nexport default class App extends React.Component {\n  render(){\n    return(\n      <div>\n        <p>comA</p>\n        <ComB title ='state na przykładize licznika'/>\n        <ComC title = 'event - interakcja z komponentami'/>\n        <ComD title = 'state na przykładize formularza'/>\n        <ComE title = 'cykl życia komponentu - zegar'/>\n        <ComF title = 'static list contact'/>\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/comA/comA'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}